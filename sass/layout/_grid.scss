.row {
  //if we have enough width, then it will specify the 114 rem, but if it is not enough width, so the viewport is smaller than the width that we specify here, then it will fill 100% of the availabel space that it has.
  max-width: $grid-width;
  // background-color: #eee;
  margin: 0 auto; // left right auto

  // accept everything exept the last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }
  @include clearfix;
  // this will select all the class attribute start with col-, by using the ^ symbol
  // * will mean that select any classes which contain this part col-.
  // $ means any class that end with col-.
  [class^="col-"] {
    // background-color: orangered;
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;
    }
  }
  .col-1-of-2 {
    // use the native calc function to mix the unit.
    // in the calc function of css, we need to add #{} to use the sass variable.
    width: calc((100% - #{$gutter-horizontal}) / 2);

    // float: left;

    // &:not(:last-child) {
    //   margin-right: $gutter-horizontal;
    // }
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }
  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }
  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + (2 * #{$gutter-horizontal})
    );
  }
}

//
